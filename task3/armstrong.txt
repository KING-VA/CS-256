[{'dest': 'zero', 'op': 'const', 'type': 'int', 'value': 0}, {'dest': 'ten', 'op': 'const', 'type': 'int', 'value': 10}, {'dest': 'sum', 'op': 'const', 'type': 'int', 'value': 0}, {'args': ['input'], 'dest': 'digits', 'funcs': ['getDigits'], 'op': 'call', 'type': 'int'}, {'args': ['input'], 'dest': 'tmp', 'op': 'id', 'type': 'int'}]
[{'label': 'loop'}, {'args': ['tmp', 'zero'], 'dest': 'b', 'op': 'gt', 'type': 'bool'}, {'args': ['b'], 'labels': ['body', 'done'], 'op': 'br'}]
[{'label': 'body'}, {'args': ['tmp', 'ten'], 'dest': 'digit', 'funcs': ['mod'], 'op': 'call', 'type': 'int'}, {'args': ['digit', 'digits'], 'dest': 'pow', 'funcs': ['power'], 'op': 'call', 'type': 'int'}, {'args': ['sum', 'pow'], 'dest': 'sum', 'op': 'add', 'type': 'int'}, {'args': ['tmp', 'ten'], 'dest': 'tmp', 'op': 'div', 'type': 'int'}, {'labels': ['loop'], 'op': 'jmp'}]
[{'label': 'done'}, {'args': ['input', 'sum'], 'dest': 'res', 'op': 'eq', 'type': 'bool'}, {'args': ['res'], 'op': 'print'}]
CFG Backedges
{('body', 'loop')}
CFG Reducible
True
CFG Dominators
{'start_cfg': {'start_cfg'}, 'loop': {'loop'}, 'body': {'body', 'loop'}, 'done': {'done', 'loop'}}
Use Blocks
{'input': {('done', 1), ('start_cfg', 3), ('start_cfg', 4)}, 'sum.0': {('loop', 0)}, 'ten.0': {('loop', 1)}, 'undef': {('loop', 6), ('loop', 2), ('loop', 5)}, 'digits.0': {('loop', 3)}, 'zero.0': {('loop', 4)}, 'tmp.0': {('loop', 7)}, 'tmp': {('body', 4), ('loop', 9), ('body', 1)}, 'zero': {('loop', 9)}, 'b': {('loop', 10)}, 'ten': {('body', 4), ('body', 1)}, 'digit': {('body', 2)}, 'digits': {('body', 2)}, 'sum': {('body', 3), ('done', 1)}, 'pow': {('body', 3)}, 'res': {('done', 2)}}
Def Blocks
{'zero.0': ('start_cfg', 0), 'ten.0': ('start_cfg', 1), 'sum.0': ('start_cfg', 2), 'digits.0': ('start_cfg', 3), 'tmp.0': ('start_cfg', 4), '': ('loop', 7), 'b': ('loop', 9), 'digit': ('body', 1), 'pow': ('body', 2), 'sum': ('body', 3), 'tmp': ('body', 4), 'res': ('done', 1)}
CFG Copy
{'start_cfg':  
                    Instructions: [{'dest': 'zero.0', 'op': 'const', 'type': 'int', 'value': 0}, {'dest': 'ten.0', 'op': 'const', 'type': 'int', 'value': 10}, {'dest': 'sum.0', 'op': 'const', 'type': 'int', 'value': 0}, {'args': ['input'], 'dest': 'digits.0', 'funcs': ['getDigits'], 'op': 'call', 'type': 'int'}, {'args': ['input'], 'dest': 'tmp.0', 'op': 'id', 'type': 'int'}]
        
                    Predecessors: []
                    Successors: ['loop']

, 'loop':  
                    Instructions: [{'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['sum.0']}, {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['ten.0']}, {'op': 'phi', 'dest': '', 'type': 'bool', 'labels': ['start_cfg'], 'args': ['undef']}, {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['digits.0']}, {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['zero.0']}, {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['undef']}, {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['undef']}, {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['tmp.0']}, {'label': 'loop'}, {'args': ['tmp', 'zero'], 'dest': 'b', 'op': 'gt', 'type': 'bool'}, {'args': ['b'], 'labels': ['body', 'done'], 'op': 'br'}]
        
                    Predecessors: ['start_cfg', 'body']
                    Successors: ['body', 'done']

, 'body':  
                    Instructions: [{'label': 'body'}, {'args': ['tmp', 'ten'], 'dest': 'digit', 'funcs': ['mod'], 'op': 'call', 'type': 'int'}, {'args': ['digit', 'digits'], 'dest': 'pow', 'funcs': ['power'], 'op': 'call', 'type': 'int'}, {'args': ['sum', 'pow'], 'dest': 'sum', 'op': 'add', 'type': 'int'}, {'args': ['tmp', 'ten'], 'dest': 'tmp', 'op': 'div', 'type': 'int'}, {'labels': ['loop'], 'op': 'jmp'}]
        
                    Predecessors: ['loop']
                    Successors: ['loop']

, 'done':  
                    Instructions: [{'label': 'done'}, {'args': ['input', 'sum'], 'dest': 'res', 'op': 'eq', 'type': 'bool'}, {'args': ['res'], 'op': 'print'}]
        
                    Predecessors: ['loop']
                    Successors: []

}
Preheader Blocks for header loop: {'body', 'start_cfg'}
Preheader Blocks for header loop: set()
Loop Invariant Instructions
{('loop', 3), ('start_cfg', 4), ('loop', 6), ('loop', 2), ('start_cfg', 3), ('loop', 5), ('loop', 7)}
Checking instruction: {'args': ['input'], 'dest': 'tmp.0', 'op': 'id', 'type': 'int'}
Checking if digits.0 is loop invariant
Block Name: loop, Instruction Index: 3, Instruction: {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['digits.0']}
Checking instruction: {'args': ['input'], 'dest': 'tmp.0', 'op': 'id', 'type': 'int'}
Checking if tmp.0 is loop invariant
Block Name: loop, Instruction Index: 7, Instruction: {'op': 'phi', 'dest': '', 'type': 'int', 'labels': ['start_cfg'], 'args': ['tmp.0']}
Moved instruction {'args': ['input'], 'dest': 'tmp.0', 'op': 'id', 'type': 'int'} from block start_cfg to preheader blocks set()
CFG Post SSA
{'start_cfg':  
                    Instructions: [{'dest': 'zero.0', 'op': 'const', 'type': 'int', 'value': 0}, {'dest': 'ten.0', 'op': 'const', 'type': 'int', 'value': 10}, {'dest': 'sum.0', 'op': 'const', 'type': 'int', 'value': 0}, {'op': 'id', 'type': 'int', 'args': ['sum.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['ten.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['digits.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['zero.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['tmp.0'], 'dest': ''}, {'args': ['input'], 'dest': 'digits.0', 'funcs': ['getDigits'], 'op': 'call', 'type': 'int'}]
        
                    Predecessors: []
                    Successors: ['loop']

, 'loop':  
                    Instructions: [{'label': 'loop'}, {'args': ['tmp', 'zero'], 'dest': 'b', 'op': 'gt', 'type': 'bool'}, {'args': ['b'], 'labels': ['body', 'done'], 'op': 'br'}]
        
                    Predecessors: ['start_cfg', 'body']
                    Successors: ['body', 'done']

, 'body':  
                    Instructions: [{'label': 'body'}, {'args': ['tmp', 'ten'], 'dest': 'digit', 'funcs': ['mod'], 'op': 'call', 'type': 'int'}, {'args': ['digit', 'digits'], 'dest': 'pow', 'funcs': ['power'], 'op': 'call', 'type': 'int'}, {'args': ['sum', 'pow'], 'dest': 'sum', 'op': 'add', 'type': 'int'}, {'args': ['tmp', 'ten'], 'dest': 'tmp', 'op': 'div', 'type': 'int'}, {'labels': ['loop'], 'op': 'jmp'}]
        
                    Predecessors: ['loop']
                    Successors: ['loop']

, 'done':  
                    Instructions: [{'label': 'done'}, {'args': ['input', 'sum'], 'dest': 'res', 'op': 'eq', 'type': 'bool'}, {'args': ['res'], 'op': 'print'}]
        
                    Predecessors: ['loop']
                    Successors: []

}
Instruction List
[{'label': 'start_cfg_cfg'}, {'dest': 'zero.0', 'op': 'const', 'type': 'int', 'value': 0}, {'dest': 'ten.0', 'op': 'const', 'type': 'int', 'value': 10}, {'dest': 'sum.0', 'op': 'const', 'type': 'int', 'value': 0}, {'op': 'id', 'type': 'int', 'args': ['sum.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['ten.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['digits.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['zero.0'], 'dest': ''}, {'op': 'id', 'type': 'int', 'args': ['tmp.0'], 'dest': ''}, {'args': ['input'], 'dest': 'digits.0', 'funcs': ['getDigits'], 'op': 'call', 'type': 'int'}, {'label': 'loop_cfg'}, {'label': 'loop'}, {'args': ['tmp', 'zero'], 'dest': 'b', 'op': 'gt', 'type': 'bool'}, {'args': ['b'], 'labels': ['body', 'done'], 'op': 'br'}, {'label': 'body_cfg'}, {'label': 'body'}, {'args': ['tmp', 'ten'], 'dest': 'digit', 'funcs': ['mod'], 'op': 'call', 'type': 'int'}, {'args': ['digit', 'digits'], 'dest': 'pow', 'funcs': ['power'], 'op': 'call', 'type': 'int'}, {'args': ['sum', 'pow'], 'dest': 'sum', 'op': 'add', 'type': 'int'}, {'args': ['tmp', 'ten'], 'dest': 'tmp', 'op': 'div', 'type': 'int'}, {'labels': ['loop'], 'op': 'jmp'}, {'label': 'done_cfg'}, {'label': 'done'}, {'args': ['input', 'sum'], 'dest': 'res', 'op': 'eq', 'type': 'bool'}, {'args': ['res'], 'op': 'print'}]
{
  "functions": [
    {
      "args": [
        {
          "name": "input",
          "type": "int"
        }
      ],
      "instrs": [
        {
          "label": "start_cfg_cfg"
        },
        {
          "dest": "zero.0",
          "op": "const",
          "type": "int",
          "value": 0
        },
        {
          "dest": "ten.0",
          "op": "const",
          "type": "int",
          "value": 10
        },
        {
          "dest": "sum.0",
          "op": "const",
          "type": "int",
          "value": 0
        },
        {
          "op": "id",
          "type": "int",
          "args": [
            "sum.0"
          ],
          "dest": ""
        },
        {
          "op": "id",
          "type": "int",
          "args": [
            "ten.0"
          ],
          "dest": ""
        },
        {
          "op": "id",
          "type": "int",
          "args": [
            "digits.0"
          ],
          "dest": ""
        },
        {
          "op": "id",
          "type": "int",
          "args": [
            "zero.0"
          ],
          "dest": ""
        },
        {
          "op": "id",
          "type": "int",
          "args": [
            "tmp.0"
          ],
          "dest": ""
        },
        {
          "args": [
            "input"
          ],
          "dest": "digits.0",
          "funcs": [
            "getDigits"
          ],
          "op": "call",
          "type": "int"
        },
        {
          "label": "loop_cfg"
        },
        {
          "label": "loop"
        },
        {
          "args": [
            "tmp",
            "zero"
          ],
          "dest": "b",
          "op": "gt",
          "type": "bool"
        },
        {
          "args": [
            "b"
          ],
          "labels": [
            "body",
            "done"
          ],
          "op": "br"
        },
        {
          "label": "body_cfg"
        },
        {
          "label": "body"
        },
        {
          "args": [
            "tmp",
            "ten"
          ],
          "dest": "digit",
          "funcs": [
            "mod"
          ],
          "op": "call",
          "type": "int"
        },
        {
          "args": [
            "digit",
            "digits"
          ],
          "dest": "pow",
          "funcs": [
            "power"
          ],
          "op": "call",
          "type": "int"
        },
        {
          "args": [
            "sum",
            "pow"
          ],
          "dest": "sum",
          "op": "add",
          "type": "int"
        },
        {
          "args": [
            "tmp",
            "ten"
          ],
          "dest": "tmp",
          "op": "div",
          "type": "int"
        },
        {
          "labels": [
            "loop"
          ],
          "op": "jmp"
        },
        {
          "label": "done_cfg"
        },
        {
          "label": "done"
        },
        {
          "args": [
            "input",
            "sum"
          ],
          "dest": "res",
          "op": "eq",
          "type": "bool"
        },
        {
          "args": [
            "res"
          ],
          "op": "print"
        }
      ],
      "name": "main"
    },
    {
      "args": [
        {
          "name": "n",
          "type": "int"
        }
      ],
      "instrs": [
        {
          "dest": "ten",
          "op": "const",
          "type": "int",
          "value": 10
        },
        {
          "dest": "zero",
          "op": "const",
          "type": "int",
          "value": 0
        },
        {
          "dest": "one",
          "op": "const",
          "type": "int",
          "value": 1
        },
        {
          "args": [
            "n",
            "ten"
          ],
          "dest": "div",
          "op": "div",
          "type": "int"
        },
        {
          "args": [
            "div",
            "zero"
          ],
          "dest": "cond",
          "op": "eq",
          "type": "bool"
        },
        {
          "args": [
            "cond"
          ],
          "labels": [
            "then",
            "else"
          ],
          "op": "br"
        },
        {
          "label": "then"
        },
        {
          "args": [
            "one"
          ],
          "op": "ret"
        },
        {
          "label": "else"
        },
        {
          "args": [
            "div"
          ],
          "dest": "rec",
          "funcs": [
            "getDigits"
          ],
          "op": "call",
          "type": "int"
        },
        {
          "args": [
            "rec",
            "one"
          ],
          "dest": "res",
          "op": "add",
          "type": "int"
        },
        {
          "args": [
            "res"
          ],
          "op": "ret"
        }
      ],
      "name": "getDigits",
      "type": "int"
    },
    {
      "args": [
        {
          "name": "a",
          "type": "int"
        },
        {
          "name": "b",
          "type": "int"
        }
      ],
      "instrs": [
        {
          "args": [
            "a",
            "b"
          ],
          "dest": "q",
          "op": "div",
          "type": "int"
        },
        {
          "args": [
            "b",
            "q"
          ],
          "dest": "aq",
          "op": "mul",
          "type": "int"
        },
        {
          "args": [
            "a",
            "aq"
          ],
          "dest": "mod",
          "op": "sub",
          "type": "int"
        },
        {
          "args": [
            "mod"
          ],
          "op": "ret"
        }
      ],
      "name": "mod",
      "type": "int"
    },
    {
      "args": [
        {
          "name": "base",
          "type": "int"
        },
        {
          "name": "exp",
          "type": "int"
        }
      ],
      "instrs": [
        {
          "dest": "ten",
          "op": "const",
          "type": "int",
          "value": 10
        },
        {
          "dest": "zero",
          "op": "const",
          "type": "int",
          "value": 0
        },
        {
          "dest": "one",
          "op": "const",
          "type": "int",
          "value": 1
        },
        {
          "dest": "res",
          "op": "const",
          "type": "int",
          "value": 1
        },
        {
          "label": "loop"
        },
        {
          "args": [
            "exp",
            "zero"
          ],
          "dest": "b",
          "op": "eq",
          "type": "bool"
        },
        {
          "args": [
            "b"
          ],
          "labels": [
            "done",
            "body"
          ],
          "op": "br"
        },
        {
          "label": "body"
        },
        {
          "args": [
            "res",
            "base"
          ],
          "dest": "res",
          "op": "mul",
          "type": "int"
        },
        {
          "args": [
            "exp",
            "one"
          ],
          "dest": "exp",
          "op": "sub",
          "type": "int"
        },
        {
          "labels": [
            "loop"
          ],
          "op": "jmp"
        },
        {
          "label": "done"
        },
        {
          "args": [
            "res"
          ],
          "op": "ret"
        }
      ],
      "name": "power",
      "type": "int"
    }
  ]
}